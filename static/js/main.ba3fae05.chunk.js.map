{"version":3,"sources":["CountDownTimer.js","App.js","reportWebVitals.js","index.js"],"names":["CountDownTimer","daysHoursMinSecs","days","hours","minutes","seconds","React","useState","dys","hrs","mins","secs","setTime","reset","parseInt","useEffect","timerId","setInterval","clearInterval","toString","padStart","App","className","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oOA2CeA,EAxCQ,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,iBAErB,EAA2DA,EAAnDC,YAAR,MAAe,EAAf,IAA2DD,EAAzCE,aAAlB,MAA0B,EAA1B,IAA2DF,EAA9BG,eAA7B,MAAuC,EAAvC,IAA2DH,EAAjBI,eAA1C,MAAoD,GAApD,EACA,EAA0CC,IAAMC,SAAS,CAACL,EAAMC,EAAOC,EAASC,IAAhF,yCAAQG,EAAR,KAAaC,EAAb,KAAkBC,EAAlB,KAAwBC,EAAxB,KAA+BC,EAA/B,KAmBMC,EAAQ,kBAAMD,EAAQ,CAACE,SAASZ,GAAOY,SAASX,GAAQW,SAASV,GAAUU,SAAST,MAS1F,OANAC,IAAMS,WAAU,WACZ,IAAMC,EAAUC,aAAY,WAlBhB,IAART,GAAqB,IAARC,GAAsB,IAATC,GAAuB,IAATC,EACxCE,IAEAD,EADY,IAARH,GAAsB,IAATC,GAAuB,IAATC,EACvB,CAACH,EAAM,EAAG,GAAI,GAAI,IACV,IAATE,GAAuB,IAATC,EACb,CAACH,EAAKC,EAAM,EAAG,GAAI,IACX,IAATE,EACC,CAACH,EAAKC,EAAKC,EAAO,EAAG,IAErB,CAACF,EAAKC,EAAKC,EAAMC,EAAO,MASM,KAC1C,OAAO,kBAAMO,cAAcF,OAK3B,8BACI,sCAAOR,EAAIW,WAAWC,SAAS,EAAG,KAAlC,YAA0CX,EAAIU,WAAWC,SAAS,EAAG,KAArE,YAA6EV,EAC5ES,WACAC,SAAS,EAAG,KAFb,YAEqBT,EAAKQ,WAAWC,SAAS,EAAG,WCxB9CC,MAXf,WAIE,OACE,qBAAKC,UAAU,MAAf,SACI,cAAC,EAAD,CAAgBrB,iBAJG,CAACC,KAAM,EAAGC,MAAO,GAAIC,QAAS,GAAIC,QAAS,QCOvDkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.ba3fae05.chunk.js","sourcesContent":["\nimport React from 'react'\n\nconst CountDownTimer = ({daysHoursMinSecs}) => {\n   \n    const { days = 0, hours = 0, minutes = 0, seconds = 60 } = daysHoursMinSecs;\n    const [[dys, hrs, mins, secs], setTime] = React.useState([days, hours, minutes, seconds]);\n    \n\n    const tick = () => {\n   \n        if (dys === 0 && hrs === 0 && mins === 0 && secs === 0) \n            reset()\n        else if(hrs === 0 && mins === 0 && secs === 0){\n            setTime([dys - 1, 23, 59, 59]);\n        } else if (mins === 0 && secs === 0) {\n            setTime([dys, hrs - 1, 59, 59]);\n        } else if (secs === 0) {\n            setTime([dys, hrs, mins - 1, 59]);\n        } else {\n            setTime([dys, hrs, mins, secs - 1]);\n        }\n    };\n\n\n    const reset = () => setTime([parseInt(days), parseInt(hours), parseInt(minutes), parseInt(seconds)]);\n\n    \n    React.useEffect(() => {\n        const timerId = setInterval(() => tick(), 1000);\n        return () => clearInterval(timerId);\n    });\n\n    \n    return (\n        <div>\n            <p>{`${dys.toString().padStart(2, '0')}:${hrs.toString().padStart(2, '0')}:${mins\n            .toString()\n            .padStart(2, '0')}:${secs.toString().padStart(2, '0')}`}</p> \n        </div>\n    );\n}\n\nexport default CountDownTimer;\n","import './App.css';\nimport CountDownTimer from './CountDownTimer';\n\nfunction App() {\n\n  const daysHoursMinSecs = {days: 6, hours: 22, minutes: 45, seconds: 0}\n  \n  return (\n    <div className=\"App\">\n        <CountDownTimer daysHoursMinSecs={daysHoursMinSecs}/>\n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}